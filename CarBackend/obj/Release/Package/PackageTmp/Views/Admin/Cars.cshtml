@using CarBackend.Models
@using PagedList.Mvc
@model PagedList.PagedList<XEGANMAY>

@helper Truncate(string input, int length)
    {
        
    if (input.Length < length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length)<text>.....</text>
    }
    
    }

@{
    ViewBag.Title = "Cars";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}



<div class="container my-5">
    <h2 class="text-center mb-4 display-6 text-primary">Car Management</h2>
    <!-- Table for Car Management -->
    <table class="table table-bordered table-striped table-hover">
        <h5>
            @Html.ActionLink("Add New Car", "AddNewCar")
        </h5>
        <thead class="thead-dark">
            <tr>
                <th scope="col">Car Name</th>
                <th scope="col">Price</th>
                <th scope="col">Description</th>
                <th scope="col">Image</th>
                <th scope="col">Date Updated</th>
                <th scope="col">Stock Quantity</th>
                <th scope="col">Type Code</th>
                <th scope="col">Distributor Code</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.TenXe)</td>
                    <td>@Html.DisplayFor(modelItem => item.Giaban)</td>
                    <td>@Truncate(item.Mota, 100)</td>
                    <td>
                        <img src="~/Content/images/@item.Anhbia"
                             alt="@item.TenXe"
                             class="img-fluid rounded-top"
                             style="object-fit: contain; width: 100%; height: 100px;">
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Ngaycapnhat)</td>
                    <td>@Html.DisplayFor(modelItem => item.Soluongton)</td>
                    <td>@Html.DisplayFor(modelItem => item.MaLX)</td>
                    <td>@Html.DisplayFor(modelItem => item.MaNPP)</td>
                    <td class="text-center">
                        <div class="btn-group" role="group" style="margin-right: 20px">
                            <button class="btn btn-primary btn-sm" style="margin-right: 20px"
                                    onclick="location.href='@Url.Action("Edit", "Admin", new { id = item.MaXe })'">
                                Edit
                            </button>
                            <button class="btn btn-info btn-sm" style="margin-right: 20px"
                                    onclick="location.href='@Url.Action("Details", "Admin", new { id = item.MaXe })'">
                                Details
                            </button>
                            <button class="btn btn-danger btn-sm"
                                    onclick="if(confirm('Are you sure you want to delete this car?')) location.href='@Url.Action("Delete", "Admin", new { id = item.MaXe })'">
                                Delete
                            </button>
                        </div>
                    </td>

                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Cars", new { page = Model.PageNumber - 1 })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link" aria-label="Previous">&laquo;</span>
                </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                if (i == Model.PageNumber)
                {
                    <li class="page-item active">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Cars", new { page = i })">@i</a>
                    </li>
                }
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Cars", new { page = Model.PageNumber + 1 })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link" aria-label="Next">&raquo;</span>
                </li>
            }
        </ul>
    </nav>

    <style>
        .pagination .page-link {
            color: #007bff;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

            .pagination .page-link:hover {
                background-color: #007bff;
                color: #fff;
            }

        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }
    </style>
</div>
